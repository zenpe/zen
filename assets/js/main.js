console.log('This site was generated by Hugo.');

document.addEventListener('DOMContentLoaded', () => {
    // --- Dark Mode Toggle ---
    const toggleButton = document.getElementById('dark-mode-toggle');
    const htmlElement = document.documentElement;

    function setTheme(theme) {
        if (theme === 'dark') {
            htmlElement.classList.add('dark-mode');
            localStorage.setItem('theme', 'dark');
        } else {
            htmlElement.classList.remove('dark-mode');
            localStorage.setItem('theme', 'light');
        }
    }

    function getPreferredTheme() {
        const storedTheme = localStorage.getItem('theme');
        if (storedTheme) {
            return storedTheme;
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    setTheme(getPreferredTheme());

    if (toggleButton) {
        toggleButton.addEventListener('click', () => {
            const currentTheme = localStorage.getItem('theme');
            setTheme(currentTheme === 'dark' ? 'light' : 'dark');
        });
    }

    // --- Archive Page Sidebar Link Handler ---
    function handleArchiveLinks() {
        const archiveLinks = document.querySelectorAll('.sidebar .card a[href*="/archive/#"]');
        if (archiveLinks.length === 0) return;

        // On page load, if there's a hash on an archive page, try to scroll to it.
        // This handles the case after redirection to the correct paginated page.
        if (window.location.pathname.startsWith('/archive/') && window.location.hash) {
            const targetId = decodeURIComponent(window.location.hash.substring(1));
            // Use a timeout to allow the page to render before scrolling
            setTimeout(() => {
                const targetElement = document.getElementById(targetId);
                if (targetElement) {
                    targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            }, 100);
        }

        fetch('/archive/archive-month.json')
            .then(response => {
                if (!response.ok) throw new Error('Failed to load /archive.json');
                return response.json();
            })
            .then(monthMap => {
                archiveLinks.forEach(link => {
                    link.addEventListener('click', function(event) {
                        const href = this.getAttribute('href');
                        const month = href.split('#')[1];

                        if (month && monthMap[month]) {
                            event.preventDefault(); // We have a custom navigation logic

                            const pageNum = monthMap[month];
                            let targetUrl = `/archive/`;
                            if (pageNum > 1) {
                                targetUrl = `/archive/page/${pageNum}/`;
                            }
                            
                            const finalUrl = targetUrl + '#' + month;

                            // If we are already on the destination URL, just scroll. Otherwise, navigate.
                            if (window.location.pathname === targetUrl && window.location.hash === '#' + month) {
                                const targetElement = document.getElementById(month);
                                if (targetElement) {
                                    targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                                }
                            } else {
                                window.location.href = finalUrl;
                            }
                        }
                    });
                });
            })
            .catch(error => {
                console.error('Archive link handler failed:', error);
                // If this logic fails, the links will fall back to their default behavior.
            });
    }

    handleArchiveLinks();
});
